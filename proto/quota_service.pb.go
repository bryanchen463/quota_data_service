// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: proto/quota_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Interval int32

const (
	Interval_INTERVAL_1MS   Interval = 0
	Interval_INTERVAL_5MS   Interval = 1
	Interval_INTERVAL_10MS  Interval = 2
	Interval_INTERVAL_30MS  Interval = 3
	Interval_INTERVAL_100MS Interval = 4
	Interval_INTERVAL_1S    Interval = 5
	Interval_INTERVAL_5S    Interval = 6
	Interval_INTERVAL_10S   Interval = 7
	Interval_INTERVAL_30S   Interval = 8
	Interval_INTERVAL_1M    Interval = 9
	Interval_INTERVAL_5M    Interval = 10
	Interval_INTERVAL_15M   Interval = 11
	Interval_INTERVAL_30M   Interval = 12
	Interval_INTERVAL_1H    Interval = 13
	Interval_INTERVAL_4H    Interval = 14
	Interval_INTERVAL_1D    Interval = 15
)

// Enum value maps for Interval.
var (
	Interval_name = map[int32]string{
		0:  "INTERVAL_1MS",
		1:  "INTERVAL_5MS",
		2:  "INTERVAL_10MS",
		3:  "INTERVAL_30MS",
		4:  "INTERVAL_100MS",
		5:  "INTERVAL_1S",
		6:  "INTERVAL_5S",
		7:  "INTERVAL_10S",
		8:  "INTERVAL_30S",
		9:  "INTERVAL_1M",
		10: "INTERVAL_5M",
		11: "INTERVAL_15M",
		12: "INTERVAL_30M",
		13: "INTERVAL_1H",
		14: "INTERVAL_4H",
		15: "INTERVAL_1D",
	}
	Interval_value = map[string]int32{
		"INTERVAL_1MS":   0,
		"INTERVAL_5MS":   1,
		"INTERVAL_10MS":  2,
		"INTERVAL_30MS":  3,
		"INTERVAL_100MS": 4,
		"INTERVAL_1S":    5,
		"INTERVAL_5S":    6,
		"INTERVAL_10S":   7,
		"INTERVAL_30S":   8,
		"INTERVAL_1M":    9,
		"INTERVAL_5M":    10,
		"INTERVAL_15M":   11,
		"INTERVAL_30M":   12,
		"INTERVAL_1H":    13,
		"INTERVAL_4H":    14,
		"INTERVAL_1D":    15,
	}
)

func (x Interval) Enum() *Interval {
	p := new(Interval)
	*p = x
	return p
}

func (x Interval) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Interval) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_quota_service_proto_enumTypes[0].Descriptor()
}

func (Interval) Type() protoreflect.EnumType {
	return &file_proto_quota_service_proto_enumTypes[0]
}

func (x Interval) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Interval.Descriptor instead.
func (Interval) EnumDescriptor() ([]byte, []int) {
	return file_proto_quota_service_proto_rawDescGZIP(), []int{0}
}

// 单个行情数据
type Tick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 接收时间（Unix时间戳，秒）
	ReceiveTime float64 `protobuf:"fixed64,1,opt,name=receive_time,json=receiveTime,proto3" json:"receive_time,omitempty"`
	// 交易对符号
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// 交易所
	Exchange string `protobuf:"bytes,3,opt,name=exchange,proto3" json:"exchange,omitempty"`
	// 市场类型：SP|UM
	MarketType string `protobuf:"bytes,4,opt,name=market_type,json=marketType,proto3" json:"market_type,omitempty"`
	// 最佳买价
	BestBidPx float64 `protobuf:"fixed64,5,opt,name=best_bid_px,json=bestBidPx,proto3" json:"best_bid_px,omitempty"`
	// 最佳买量
	BestBidSz float64 `protobuf:"fixed64,6,opt,name=best_bid_sz,json=bestBidSz,proto3" json:"best_bid_sz,omitempty"`
	// 最佳卖价
	BestAskPx float64 `protobuf:"fixed64,7,opt,name=best_ask_px,json=bestAskPx,proto3" json:"best_ask_px,omitempty"`
	// 最佳卖量
	BestAskSz float64 `protobuf:"fixed64,8,opt,name=best_ask_sz,json=bestAskSz,proto3" json:"best_ask_sz,omitempty"`
	// 买单价格数组
	BidsPx []float64 `protobuf:"fixed64,9,rep,packed,name=bids_px,json=bidsPx,proto3" json:"bids_px,omitempty"`
	// 买单数量数组
	BidsSz []float64 `protobuf:"fixed64,10,rep,packed,name=bids_sz,json=bidsSz,proto3" json:"bids_sz,omitempty"`
	// 卖单价格数组
	AsksPx []float64 `protobuf:"fixed64,11,rep,packed,name=asks_px,json=asksPx,proto3" json:"asks_px,omitempty"`
	// 卖单数量数组
	AsksSz []float64 `protobuf:"fixed64,12,rep,packed,name=asks_sz,json=asksSz,proto3" json:"asks_sz,omitempty"`
}

func (x *Tick) Reset() {
	*x = Tick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quota_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tick) ProtoMessage() {}

func (x *Tick) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quota_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tick.ProtoReflect.Descriptor instead.
func (*Tick) Descriptor() ([]byte, []int) {
	return file_proto_quota_service_proto_rawDescGZIP(), []int{0}
}

func (x *Tick) GetReceiveTime() float64 {
	if x != nil {
		return x.ReceiveTime
	}
	return 0
}

func (x *Tick) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Tick) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *Tick) GetMarketType() string {
	if x != nil {
		return x.MarketType
	}
	return ""
}

func (x *Tick) GetBestBidPx() float64 {
	if x != nil {
		return x.BestBidPx
	}
	return 0
}

func (x *Tick) GetBestBidSz() float64 {
	if x != nil {
		return x.BestBidSz
	}
	return 0
}

func (x *Tick) GetBestAskPx() float64 {
	if x != nil {
		return x.BestAskPx
	}
	return 0
}

func (x *Tick) GetBestAskSz() float64 {
	if x != nil {
		return x.BestAskSz
	}
	return 0
}

func (x *Tick) GetBidsPx() []float64 {
	if x != nil {
		return x.BidsPx
	}
	return nil
}

func (x *Tick) GetBidsSz() []float64 {
	if x != nil {
		return x.BidsSz
	}
	return nil
}

func (x *Tick) GetAsksPx() []float64 {
	if x != nil {
		return x.AsksPx
	}
	return nil
}

func (x *Tick) GetAsksSz() []float64 {
	if x != nil {
		return x.AsksSz
	}
	return nil
}

// 推送单个行情请求
type IngestTickRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tick *Tick `protobuf:"bytes,1,opt,name=tick,proto3" json:"tick,omitempty"`
}

func (x *IngestTickRequest) Reset() {
	*x = IngestTickRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quota_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestTickRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestTickRequest) ProtoMessage() {}

func (x *IngestTickRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quota_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestTickRequest.ProtoReflect.Descriptor instead.
func (*IngestTickRequest) Descriptor() ([]byte, []int) {
	return file_proto_quota_service_proto_rawDescGZIP(), []int{1}
}

func (x *IngestTickRequest) GetTick() *Tick {
	if x != nil {
		return x.Tick
	}
	return nil
}

// 推送单个行情响应
type IngestTickResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *IngestTickResponse) Reset() {
	*x = IngestTickResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quota_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestTickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestTickResponse) ProtoMessage() {}

func (x *IngestTickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quota_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestTickResponse.ProtoReflect.Descriptor instead.
func (*IngestTickResponse) Descriptor() ([]byte, []int) {
	return file_proto_quota_service_proto_rawDescGZIP(), []int{2}
}

func (x *IngestTickResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *IngestTickResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 批量推送行情请求
type IngestTicksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticks []*Tick `protobuf:"bytes,1,rep,name=ticks,proto3" json:"ticks,omitempty"`
}

func (x *IngestTicksRequest) Reset() {
	*x = IngestTicksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quota_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestTicksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestTicksRequest) ProtoMessage() {}

func (x *IngestTicksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quota_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestTicksRequest.ProtoReflect.Descriptor instead.
func (*IngestTicksRequest) Descriptor() ([]byte, []int) {
	return file_proto_quota_service_proto_rawDescGZIP(), []int{3}
}

func (x *IngestTicksRequest) GetTicks() []*Tick {
	if x != nil {
		return x.Ticks
	}
	return nil
}

// 批量推送行情响应
type IngestTicksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success        bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message        string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ProcessedCount int32  `protobuf:"varint,3,opt,name=processed_count,json=processedCount,proto3" json:"processed_count,omitempty"`
}

func (x *IngestTicksResponse) Reset() {
	*x = IngestTicksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quota_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestTicksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestTicksResponse) ProtoMessage() {}

func (x *IngestTicksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quota_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestTicksResponse.ProtoReflect.Descriptor instead.
func (*IngestTicksResponse) Descriptor() ([]byte, []int) {
	return file_proto_quota_service_proto_rawDescGZIP(), []int{4}
}

func (x *IngestTicksResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *IngestTicksResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IngestTicksResponse) GetProcessedCount() int32 {
	if x != nil {
		return x.ProcessedCount
	}
	return 0
}

// 健康检查请求
type HealthCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quota_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quota_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_proto_quota_service_proto_rawDescGZIP(), []int{5}
}

// 健康检查响应
type HealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Healthy   bool   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quota_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quota_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_proto_quota_service_proto_rawDescGZIP(), []int{6}
}

func (x *HealthCheckResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthCheckResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 获取行情数据请求
type GetTicksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 交易对符号（可选，支持通配符）
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// 交易所（可选）nets
	Exchange string `protobuf:"bytes,2,opt,name=exchange,proto3" json:"exchange,omitempty"`
	// 市场类型（可选）：SP|UM
	MarketType string `protobuf:"bytes,3,opt,name=market_type,json=marketType,proto3" json:"market_type,omitempty"`
	// 开始时间（Unix时间戳，秒）
	StartTime int64 `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 结束时间（Unix时间戳，秒）
	EndTime int64 `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// 限制返回数量（默认100，最大1000）
	Limit int32 `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	// 偏移量（用于分页）
	Offset int32 `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`
	// 时间分区（返回多长时间切片的数据）
	Interval Interval `protobuf:"varint,8,opt,name=interval,proto3,enum=quota_service.Interval" json:"interval,omitempty"`
}

func (x *GetTicksRequest) Reset() {
	*x = GetTicksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quota_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicksRequest) ProtoMessage() {}

func (x *GetTicksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quota_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicksRequest.ProtoReflect.Descriptor instead.
func (*GetTicksRequest) Descriptor() ([]byte, []int) {
	return file_proto_quota_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetTicksRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetTicksRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *GetTicksRequest) GetMarketType() string {
	if x != nil {
		return x.MarketType
	}
	return ""
}

func (x *GetTicksRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetTicksRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetTicksRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetTicksRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetTicksRequest) GetInterval() Interval {
	if x != nil {
		return x.Interval
	}
	return Interval_INTERVAL_1MS
}

// 获取行情数据响应
type GetTicksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success    bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message    string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Ticks      []*Tick `protobuf:"bytes,3,rep,name=ticks,proto3" json:"ticks,omitempty"`
	TotalCount int32   `protobuf:"varint,4,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *GetTicksResponse) Reset() {
	*x = GetTicksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quota_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicksResponse) ProtoMessage() {}

func (x *GetTicksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quota_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicksResponse.ProtoReflect.Descriptor instead.
func (*GetTicksResponse) Descriptor() ([]byte, []int) {
	return file_proto_quota_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetTicksResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetTicksResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetTicksResponse) GetTicks() []*Tick {
	if x != nil {
		return x.Ticks
	}
	return nil
}

func (x *GetTicksResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// 获取最新行情请求
type GetLatestTickRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 交易对符号（必填）
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// 交易所（可选）
	Exchange string `protobuf:"bytes,2,opt,name=exchange,proto3" json:"exchange,omitempty"`
	// 市场类型（可选）：SP|UM
	MarketType string `protobuf:"bytes,3,opt,name=market_type,json=marketType,proto3" json:"market_type,omitempty"`
}

func (x *GetLatestTickRequest) Reset() {
	*x = GetLatestTickRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quota_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestTickRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestTickRequest) ProtoMessage() {}

func (x *GetLatestTickRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quota_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestTickRequest.ProtoReflect.Descriptor instead.
func (*GetLatestTickRequest) Descriptor() ([]byte, []int) {
	return file_proto_quota_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetLatestTickRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetLatestTickRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *GetLatestTickRequest) GetMarketType() string {
	if x != nil {
		return x.MarketType
	}
	return ""
}

// 获取最新行情响应
type GetLatestTickResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Tick    *Tick  `protobuf:"bytes,3,opt,name=tick,proto3" json:"tick,omitempty"`
}

func (x *GetLatestTickResponse) Reset() {
	*x = GetLatestTickResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quota_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestTickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestTickResponse) ProtoMessage() {}

func (x *GetLatestTickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quota_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestTickResponse.ProtoReflect.Descriptor instead.
func (*GetLatestTickResponse) Descriptor() ([]byte, []int) {
	return file_proto_quota_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetLatestTickResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetLatestTickResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetLatestTickResponse) GetTick() *Tick {
	if x != nil {
		return x.Tick
	}
	return nil
}

type GetActiveSymbolsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 交易所（可选）
	Exchange string `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	// 市场类型（可选）：SP|UM
	MarketType string `protobuf:"bytes,2,opt,name=market_type,json=marketType,proto3" json:"market_type,omitempty"`
}

func (x *GetActiveSymbolsRequest) Reset() {
	*x = GetActiveSymbolsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quota_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveSymbolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveSymbolsRequest) ProtoMessage() {}

func (x *GetActiveSymbolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quota_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveSymbolsRequest.ProtoReflect.Descriptor instead.
func (*GetActiveSymbolsRequest) Descriptor() ([]byte, []int) {
	return file_proto_quota_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetActiveSymbolsRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *GetActiveSymbolsRequest) GetMarketType() string {
	if x != nil {
		return x.MarketType
	}
	return ""
}

type ActiveSymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol     string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Exchange   string `protobuf:"bytes,2,opt,name=exchange,proto3" json:"exchange,omitempty"`
	MarketType string `protobuf:"bytes,3,opt,name=market_type,json=marketType,proto3" json:"market_type,omitempty"`
}

func (x *ActiveSymbol) Reset() {
	*x = ActiveSymbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quota_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveSymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveSymbol) ProtoMessage() {}

func (x *ActiveSymbol) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quota_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveSymbol.ProtoReflect.Descriptor instead.
func (*ActiveSymbol) Descriptor() ([]byte, []int) {
	return file_proto_quota_service_proto_rawDescGZIP(), []int{12}
}

func (x *ActiveSymbol) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ActiveSymbol) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *ActiveSymbol) GetMarketType() string {
	if x != nil {
		return x.MarketType
	}
	return ""
}

type GetActiveSymbolsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool            `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Symbols []*ActiveSymbol `protobuf:"bytes,3,rep,name=symbols,proto3" json:"symbols,omitempty"`
}

func (x *GetActiveSymbolsResponse) Reset() {
	*x = GetActiveSymbolsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quota_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveSymbolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveSymbolsResponse) ProtoMessage() {}

func (x *GetActiveSymbolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quota_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveSymbolsResponse.ProtoReflect.Descriptor instead.
func (*GetActiveSymbolsResponse) Descriptor() ([]byte, []int) {
	return file_proto_quota_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetActiveSymbolsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetActiveSymbolsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetActiveSymbolsResponse) GetSymbols() []*ActiveSymbol {
	if x != nil {
		return x.Symbols
	}
	return nil
}

var File_proto_quota_service_proto protoreflect.FileDescriptor

var file_proto_quota_service_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xe2, 0x02, 0x0a, 0x04, 0x54,
	0x69, 0x63, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x62,
	0x65, 0x73, 0x74, 0x5f, 0x62, 0x69, 0x64, 0x5f, 0x70, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x62, 0x65, 0x73, 0x74, 0x42, 0x69, 0x64, 0x50, 0x78, 0x12, 0x1e, 0x0a, 0x0b, 0x62,
	0x65, 0x73, 0x74, 0x5f, 0x62, 0x69, 0x64, 0x5f, 0x73, 0x7a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x62, 0x65, 0x73, 0x74, 0x42, 0x69, 0x64, 0x53, 0x7a, 0x12, 0x1e, 0x0a, 0x0b, 0x62,
	0x65, 0x73, 0x74, 0x5f, 0x61, 0x73, 0x6b, 0x5f, 0x70, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x62, 0x65, 0x73, 0x74, 0x41, 0x73, 0x6b, 0x50, 0x78, 0x12, 0x1e, 0x0a, 0x0b, 0x62,
	0x65, 0x73, 0x74, 0x5f, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x7a, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x62, 0x65, 0x73, 0x74, 0x41, 0x73, 0x6b, 0x53, 0x7a, 0x12, 0x17, 0x0a, 0x07, 0x62,
	0x69, 0x64, 0x73, 0x5f, 0x70, 0x78, 0x18, 0x09, 0x20, 0x03, 0x28, 0x01, 0x52, 0x06, 0x62, 0x69,
	0x64, 0x73, 0x50, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x69, 0x64, 0x73, 0x5f, 0x73, 0x7a, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x01, 0x52, 0x06, 0x62, 0x69, 0x64, 0x73, 0x53, 0x7a, 0x12, 0x17, 0x0a,
	0x07, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x70, 0x78, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x01, 0x52, 0x06,
	0x61, 0x73, 0x6b, 0x73, 0x50, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x73,
	0x7a, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x01, 0x52, 0x06, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x7a, 0x22,
	0x3c, 0x0a, 0x11, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x22, 0x48, 0x0a,
	0x12, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3f, 0x0a, 0x12, 0x49, 0x6e, 0x67, 0x65, 0x73,
	0x74, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x05, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x69, 0x63,
	0x6b, 0x52, 0x05, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x22, 0x72, 0x0a, 0x13, 0x49, 0x6e, 0x67, 0x65,
	0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x14, 0x0a, 0x12,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x67, 0x0a, 0x13, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x83, 0x02, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x33, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x22, 0x92, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x74, 0x69,
	0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x05,
	0x74, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x74, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x54, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x27, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54,
	0x69, 0x63, 0x6b, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x22, 0x56, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x63, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x2a, 0xa7,
	0x02, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x0c, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x31, 0x4d, 0x53, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x35, 0x4d, 0x53, 0x10, 0x01, 0x12,
	0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x31, 0x30, 0x4d, 0x53,
	0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x33,
	0x30, 0x4d, 0x53, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41,
	0x4c, 0x5f, 0x31, 0x30, 0x30, 0x4d, 0x53, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x31, 0x53, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x35, 0x53, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x31, 0x30, 0x53, 0x10, 0x07, 0x12, 0x10, 0x0a,
	0x0c, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x33, 0x30, 0x53, 0x10, 0x08, 0x12,
	0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x31, 0x4d, 0x10, 0x09,
	0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x35, 0x4d, 0x10,
	0x0a, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x31, 0x35,
	0x4d, 0x10, 0x0b, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f,
	0x33, 0x30, 0x4d, 0x10, 0x0c, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41,
	0x4c, 0x5f, 0x31, 0x48, 0x10, 0x0d, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56,
	0x41, 0x4c, 0x5f, 0x34, 0x48, 0x10, 0x0e, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x56, 0x41, 0x4c, 0x5f, 0x31, 0x44, 0x10, 0x0f, 0x32, 0x9b, 0x04, 0x0a, 0x0c, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x0a, 0x49, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x20, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x54, 0x69,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74,
	0x54, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0b,
	0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x21, 0x2e, 0x71, 0x75,
	0x6f, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x67, 0x65,
	0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49,
	0x6e, 0x67, 0x65, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x1e,
	0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b,
	0x12, 0x23, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54,
	0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0b, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x21, 0x2e, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x63, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x12, 0x26, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x72, 0x79, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x34, 0x36,
	0x33, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_quota_service_proto_rawDescOnce sync.Once
	file_proto_quota_service_proto_rawDescData = file_proto_quota_service_proto_rawDesc
)

func file_proto_quota_service_proto_rawDescGZIP() []byte {
	file_proto_quota_service_proto_rawDescOnce.Do(func() {
		file_proto_quota_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_quota_service_proto_rawDescData)
	})
	return file_proto_quota_service_proto_rawDescData
}

var file_proto_quota_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_quota_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_quota_service_proto_goTypes = []interface{}{
	(Interval)(0),                    // 0: quota_service.Interval
	(*Tick)(nil),                     // 1: quota_service.Tick
	(*IngestTickRequest)(nil),        // 2: quota_service.IngestTickRequest
	(*IngestTickResponse)(nil),       // 3: quota_service.IngestTickResponse
	(*IngestTicksRequest)(nil),       // 4: quota_service.IngestTicksRequest
	(*IngestTicksResponse)(nil),      // 5: quota_service.IngestTicksResponse
	(*HealthCheckRequest)(nil),       // 6: quota_service.HealthCheckRequest
	(*HealthCheckResponse)(nil),      // 7: quota_service.HealthCheckResponse
	(*GetTicksRequest)(nil),          // 8: quota_service.GetTicksRequest
	(*GetTicksResponse)(nil),         // 9: quota_service.GetTicksResponse
	(*GetLatestTickRequest)(nil),     // 10: quota_service.GetLatestTickRequest
	(*GetLatestTickResponse)(nil),    // 11: quota_service.GetLatestTickResponse
	(*GetActiveSymbolsRequest)(nil),  // 12: quota_service.GetActiveSymbolsRequest
	(*ActiveSymbol)(nil),             // 13: quota_service.ActiveSymbol
	(*GetActiveSymbolsResponse)(nil), // 14: quota_service.GetActiveSymbolsResponse
}
var file_proto_quota_service_proto_depIdxs = []int32{
	1,  // 0: quota_service.IngestTickRequest.tick:type_name -> quota_service.Tick
	1,  // 1: quota_service.IngestTicksRequest.ticks:type_name -> quota_service.Tick
	0,  // 2: quota_service.GetTicksRequest.interval:type_name -> quota_service.Interval
	1,  // 3: quota_service.GetTicksResponse.ticks:type_name -> quota_service.Tick
	1,  // 4: quota_service.GetLatestTickResponse.tick:type_name -> quota_service.Tick
	13, // 5: quota_service.GetActiveSymbolsResponse.symbols:type_name -> quota_service.ActiveSymbol
	2,  // 6: quota_service.QuotaService.IngestTick:input_type -> quota_service.IngestTickRequest
	4,  // 7: quota_service.QuotaService.IngestTicks:input_type -> quota_service.IngestTicksRequest
	8,  // 8: quota_service.QuotaService.GetTicks:input_type -> quota_service.GetTicksRequest
	10, // 9: quota_service.QuotaService.GetLatestTick:input_type -> quota_service.GetLatestTickRequest
	6,  // 10: quota_service.QuotaService.HealthCheck:input_type -> quota_service.HealthCheckRequest
	12, // 11: quota_service.QuotaService.GetActiveSymbols:input_type -> quota_service.GetActiveSymbolsRequest
	3,  // 12: quota_service.QuotaService.IngestTick:output_type -> quota_service.IngestTickResponse
	5,  // 13: quota_service.QuotaService.IngestTicks:output_type -> quota_service.IngestTicksResponse
	9,  // 14: quota_service.QuotaService.GetTicks:output_type -> quota_service.GetTicksResponse
	11, // 15: quota_service.QuotaService.GetLatestTick:output_type -> quota_service.GetLatestTickResponse
	7,  // 16: quota_service.QuotaService.HealthCheck:output_type -> quota_service.HealthCheckResponse
	14, // 17: quota_service.QuotaService.GetActiveSymbols:output_type -> quota_service.GetActiveSymbolsResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_quota_service_proto_init() }
func file_proto_quota_service_proto_init() {
	if File_proto_quota_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_quota_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quota_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestTickRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quota_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestTickResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quota_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestTicksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quota_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestTicksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quota_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quota_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quota_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTicksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quota_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTicksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quota_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestTickRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quota_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestTickResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quota_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveSymbolsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quota_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveSymbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quota_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveSymbolsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_quota_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_quota_service_proto_goTypes,
		DependencyIndexes: file_proto_quota_service_proto_depIdxs,
		EnumInfos:         file_proto_quota_service_proto_enumTypes,
		MessageInfos:      file_proto_quota_service_proto_msgTypes,
	}.Build()
	File_proto_quota_service_proto = out.File
	file_proto_quota_service_proto_rawDesc = nil
	file_proto_quota_service_proto_goTypes = nil
	file_proto_quota_service_proto_depIdxs = nil
}
