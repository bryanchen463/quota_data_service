syntax = "proto3";

package quota_service;

option go_package = "github.com/bryanchen463/quota_data_service/proto";

// 行情数据服务
service QuotaService {
  // 推送行情数据
  rpc IngestTick(IngestTickRequest) returns (IngestTickResponse);
  
  // 批量推送行情数据
  rpc IngestTicks(IngestTicksRequest) returns (IngestTicksResponse);
  
  // 获取行情数据
  rpc GetTicks(GetTicksRequest) returns (GetTicksResponse);
  
  // 获取最新行情
  rpc GetLatestTick(GetLatestTickRequest) returns (GetLatestTickResponse);
  
  // 健康检查
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);

  // 获取活跃交易对
  rpc GetActiveSymbols(GetActiveSymbolsRequest) returns (GetActiveSymbolsResponse);
}

// 单个行情数据
message Tick {
  // 接收时间（Unix时间戳，秒）
  double receive_time = 1;
  
  // 交易对符号
  string symbol = 2;
  
  // 交易所
  string exchange = 3;
  
  // 市场类型：SP|UM
  string market_type = 4;
  
  // 最佳买价
  double best_bid_px = 5;
  
  // 最佳买量
  double best_bid_sz = 6;
  
  // 最佳卖价
  double best_ask_px = 7;
  
  // 最佳卖量
  double best_ask_sz = 8;
  
  // 买单价格数组
  repeated double bids_px = 9;
  
  // 买单数量数组
  repeated double bids_sz = 10;
  
  // 卖单价格数组
  repeated double asks_px = 11;
  
  // 卖单数量数组
  repeated double asks_sz = 12;
}

// 推送单个行情请求
message IngestTickRequest {
  Tick tick = 1;
}

// 推送单个行情响应
message IngestTickResponse {
  bool success = 1;
  string message = 2;
}

// 批量推送行情请求
message IngestTicksRequest {
  repeated Tick ticks = 1;
}

// 批量推送行情响应
message IngestTicksResponse {
  bool success = 1;
  string message = 2;
  int32 processed_count = 3;
}

// 健康检查请求
message HealthCheckRequest {}

// 健康检查响应
message HealthCheckResponse {
  bool healthy = 1;
  string message = 2;
  int64 timestamp = 3;
}

enum Interval {
  INTERVAL_1MS = 0;
  INTERVAL_5MS = 1;
  INTERVAL_10MS = 2;
  INTERVAL_30MS = 3;
  INTERVAL_100MS = 4;
  INTERVAL_1S = 5;
  INTERVAL_5S = 6;
  INTERVAL_10S = 7;
  INTERVAL_30S = 8;
  INTERVAL_1M = 9;
  INTERVAL_5M = 10;
  INTERVAL_15M = 11;
  INTERVAL_30M = 12;
  INTERVAL_1H = 13;
  INTERVAL_4H = 14;
  INTERVAL_1D = 15;
};

// 获取行情数据请求
message GetTicksRequest {
  // 交易对符号（可选，支持通配符）
  string symbol = 1;
  
  // 交易所（可选）nets
  string exchange = 2;
  
  // 市场类型（可选）：SP|UM
  string market_type = 3;
  
  // 开始时间（Unix时间戳，秒）
  int64 start_time = 4;
  
  // 结束时间（Unix时间戳，秒）
  int64 end_time = 5;
  
  // 限制返回数量（默认100，最大1000）
  int32 limit = 6;
  
  // 偏移量（用于分页）
  int32 offset = 7;

  // 时间分区（返回多长时间切片的数据）
  Interval interval = 8;
}

// 获取行情数据响应
message GetTicksResponse {
  bool success = 1;
  string message = 2;
  repeated Tick ticks = 3;
  int32 total_count = 4;
}

// 获取最新行情请求
message GetLatestTickRequest {
  // 交易对符号（必填）
  string symbol = 1;
  
  // 交易所（可选）
  string exchange = 2;
  
  // 市场类型（可选）：SP|UM
  string market_type = 3;
}

// 获取最新行情响应
message GetLatestTickResponse {
  bool success = 1;
  string message = 2;
  Tick tick = 3;
} 

message GetActiveSymbolsRequest {
  // 交易所（可选）
  string exchange = 1;

  // 市场类型（可选）：SP|UM
  string market_type = 2;
}

message ActiveSymbol {
  string symbol = 1;
  string exchange = 2;
  string market_type = 3;
}

message GetActiveSymbolsResponse {
  bool success = 1;
  string message = 2;
  repeated ActiveSymbol symbols = 3;
}